# -*- coding: utf-8 -*-
"""Locally Weighted Graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zRd9pSXbdvsxS0cgEigBoIleasSTtTzm
"""

#locally weighted
import numpy as np
import matplotlib.pyplot as plt
def loess(x,y,alpha,poly_degree=1):
  n=len(x)
  y_pred=np.zeros(n)
  weights=np.zeros(n)
  for i in range(n):
    diff=np.abs(x-x[i])
    weights=np.exp(-(diff**2)/(2*alpha))
    coeffs=np.polyfit(x,y,poly_degree,w=weights)
    y_pred[i]=np.polyval(coeffs,x[i])
  return y_pred
x=np.linspace(0,10,num=50)
y=np.sin(x)+np.random.normal(scale=0.1,size=50)
y_pred=loess(x,y,alpha=0.3,poly_degree=2)
plt.plot(x,y,'o',label='data')
plt.plot(x,y_pred,label='Loess')
plt.legend()
plt.show()